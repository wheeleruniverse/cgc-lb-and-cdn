name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      flush_valkey:
        description: 'Flush Valkey database on deployment (clears all data)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  DIGITALOCEAN_TOKEN: ${{ secrets.DO_ACCESS_TOKEN }}
  SPACES_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_ACCESS_KEY }}
  SPACES_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET_KEY }}

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache-dependency-path: hosting/go.sum

    - name: Setup Pulumi CLI
      uses: pulumi/actions@v4


    - name: Build infrastructure program
      working-directory: hosting
      run: |
        mkdir -p bin
        go mod download
        go build -o bin/cgc-lb-and-cdn .

    - name: Deploy infrastructure
      working-directory: hosting
      run: |
        pulumi stack select dev --create

        # Configure deployment SHA
        pulumi config set cgc-lb-and-cdn:sha "${{ github.sha }}"

        # Configure Valkey flush option
        pulumi config set cgc-lb-and-cdn:flush_valkey "${{ github.event.inputs.flush_valkey || 'false' }}"

        # Configure API keys as Pulumi secrets
        pulumi config set --secret cgc-lb-and-cdn:google_api_key "${{ secrets.GOOGLE_API_KEY }}"
        pulumi config set --secret cgc-lb-and-cdn:leonardo_api_key "${{ secrets.LEONARDO_API_KEY }}"
        pulumi config set --secret cgc-lb-and-cdn:freepik_api_key "${{ secrets.FREEPIK_API_KEY }}"

        # Configure DigitalOcean Spaces credentials
        pulumi config set --secret cgc-lb-and-cdn:do_spaces_access_key "${{ secrets.DO_SPACES_ACCESS_KEY }}"
        pulumi config set --secret cgc-lb-and-cdn:do_spaces_secret_key "${{ secrets.DO_SPACES_SECRET_KEY }}"

        # Configure storage settings
        pulumi config set cgc-lb-and-cdn:use_do_spaces "true"

        # Deploy infrastructure
        # Note: Droplets will automatically be replaced when SHA changes (new commit)
        echo "ðŸ“¦ Deploying infrastructure..."
        pulumi up --yes
      env:
        PULUMI_STACK: dev

    - name: Export stack outputs
      if: success()
      working-directory: hosting
      run: |
        echo "## Infrastructure Outputs" >> $GITHUB_STEP_SUMMARY
        echo "### Load Balancer IP" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        pulumi stack output loadBalancerIp >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

        # Export all droplet IPs dynamically
        for i in {1..10}; do
          if pulumi stack output "droplet${i}Ip" 2>/dev/null; then
            echo "### Droplet $i IP (Full-Stack)" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            pulumi stack output "droplet${i}Ip" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi
        done

        echo "### Valkey Database" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "Host: $(pulumi stack output valkeyClusterHost)" >> $GITHUB_STEP_SUMMARY
        echo "Port: $(pulumi stack output valkeyClusterPort)" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY